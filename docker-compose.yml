services:
  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    env_file: .env
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro  # Mount the Telegraf configuration file
      - ./telegraf/ups-status.sh:/etc/telegraf/ups-status.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Mount the Docker socket to collect Docker metrics
      - /var/run/utmp:/var/run/utmp:ro
    depends_on: []
    # - influxdb
    links: []
    # - influxdb
    ports:
      - '8125:8125'  # Expose Telegraf's StatsD port
    privileged: true
    networks:
      - monitoring  # Connect the Telegraf container to the monitoring network
    entrypoint: ["bash", "-c", "echo 'installing UPS tools: nut' && apt-get -qq update > /dev/null && apt-get -qq install nut > /dev/null && /usr/bin/telegraf"]

  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    env_file: .env
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXD_SESSION_LENGTH=432000
    ports:
      - 8086:8086
      - 8083:8083
    volumes:
      - influxdb_data:/var/lib/influxdb2
      # - influxdb_data:/var/lib/influxdb  # Mount the InfluxDB data directory
      # - ./data/influxdb:/var/lib/influxdb  # Mount the InfluxDB data directory
    networks:
      - monitoring  # Connect the InfluxDB container to the monitoring network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    depends_on:
      - influxdb
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    # user: 1002:1002
    links:
      - influxdb
    ports:
      - '3000:3000'  # Expose Grafana on port 3000
    volumes:
      - grafana_data:/var/lib/grafana  # Mount the Grafana data directory
      # - ./data/grafana:/var/lib/grafana
    networks:
      - monitoring  # Connect the Grafana container to the monitoring network

  vuegraf:
    image: jertel/vuegraf
    container_name: vuegraf
    restart: always
    depends_on:
      - influxdb
    env_file: .env
    volumes:
      - ./data/vuegraf/vuegraf.json:/opt/vuegraf/conf/vuegraf.json:ro
    networks:
      - monitoring
      
volumes:
  grafana_data: {}
  influxdb_data: {}

networks:
  monitoring:
    external: true  # Use an external network named 'monitoring'
