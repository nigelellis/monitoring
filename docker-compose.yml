services:
  telegraf:
    image: telegraf
    container_name: telegraf
    hostname: telegraf
    restart: always
    env_file: .env
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf/ups-status.sh:/etc/telegraf/ups-status.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run/utmp:/var/run/utmp:ro
      - /sys/fs/cgroup/:/hostfs/sys/fs/cgroup:ro
      - /etc/:/hostfs/etc:ro
      - /proc/:/hostfs/proc:ro
      - /var/:/hostfs/var:ro
      - /run/:/hostfs/run:ro
    depends_on:
      - influxdb
    ports:
      - '8125:8125'
    privileged: true
    networks:
      - monitoring
    entrypoint:
      - "bash"
      - "-c"
      - "echo 'installing UPS tools: nut' && apt-get -qq update > /dev/null && apt-get -qq install nut > /dev/null && echo 'Adding CAP_NET_RAW to telegraf' && setcap cap_net_raw+ep /usr/bin/telegraf && /usr/bin/telegraf"

  influxdb:
    image: influxdb:1.11.8-alpine
    container_name: influxdb
    hostname: influxdb
    restart: always
    env_file: .env
    environment:
      - INFLUXDB_ADMIN_ENABLED=true 
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_DB=monitoring
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M
    ports:
      - 8086:8086
      - 8083:8083
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    hostname: grafana
    restart: always
    depends_on:
      - influxdb
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    # user: '1002:1002'
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  vuegraf:
    image: jertel/vuegraf
    container_name: vuegraf
    hostname: vuegraf
    restart: always
    depends_on:
      - influxdb
    env_file: .env
    volumes:
      - ./data/vuegraf/vuegraf.json:/opt/vuegraf/conf/vuegraf.json:ro
    networks:
      - monitoring
      
volumes:
  grafana_data: {}
  influxdb_data: {}

networks:
  monitoring:
    external: true
